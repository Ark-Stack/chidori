[package]
name = "chidori-static-analysis"
version = "0.1.3"
authors.workspace = true
edition.workspace = true
license.workspace = true
homepage.workspace = true
repository.workspace = true
description = "Chidori Static Analysis is part of the Chidori framework, this identifies the exposure of values in JavaScript, TypeScript and Python code in order to support wiring dependent code together"

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["console_error_panic_hook"]

[dependencies]
serde_yaml = "0.9.25"
wasm-bindgen = { version = "0.2.89", features = [] }
serde-wasm-bindgen = "0.4"
indoc.workspace = true
anyhow.workspace = true
serde.workspace = true
insta.workspace = true
thiserror.workspace = true
petgraph.workspace = true

# Support for parsing typescript/javascript
swc_common = {  version = "0.40.1", features = ["tty-emitter"]}
swc_ecma_parser = {  version = "0.152.1", features = ["typescript"]}
swc_ecma_ast = {  version = "0.121.1", features = []}

# Support for parsing python
rustpython-parser = "0.3.0"

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.7", optional = true }
lazy_static = "1.4.0"

[dev-dependencies]
wasm-bindgen-test = "0.3.34"

#[dependencies.ruff_python_ast]
#git = "https://github.com/astral-sh/ruff"
#rev = "907322088720aec94ee57979baca7157778c5f76"
#
#[dependencies.ruff_python_codegen]
#git = "https://github.com/astral-sh/ruff"
#rev = "907322088720aec94ee57979baca7157778c5f76"
