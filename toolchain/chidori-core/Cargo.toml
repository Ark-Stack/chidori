[package]
name = "chidori-core"
version.workspace = true
authors.workspace = true
edition.workspace = true
license.workspace = true
homepage.workspace = true
repository.workspace = true
description = "Core of Chidori, compiles graph and node definitions into an interpretable graph"


# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html
[lib]
name = "_chidori_core"
crate-type = ["lib", "cdylib"]
bench = false
proc-macro = true

[features]
python = []
nodejs = []
build-protos = []

# https://chat.openai.com/c/52edc960-dc19-4df7-b36f-30caad9c1905
[dependencies]
gluesql.workspace = true
protobuf.workspace = true
sqlparser.workspace = true
anyhow.workspace = true
indoc.workspace = true
serde.workspace = true
serde_json.workspace = true
tonic.workspace = true
prost.workspace = true
tokio.workspace = true
env_logger.workspace = true
log.workspace = true
futures.workspace = true
rkyv.workspace = true
reqwest.workspace = true
bytes.workspace = true

ariadne = "0.3.0"
chumsky = "0.9.3"
im = "15.1.0"
num_cpus = "1"
petgraph = "0.6.3"
typescript-type-def = "0.5.7"
serde_yaml = "0.9.25"
handlebars = "4.3.7"
syn = "1.0"
quote = "1.0"
crossbeam-utils = "0.8.15"
priority-queue = "1.3.2"
rand = "0.8"
async-trait = "0.1.69"
dotenv = "0.15.0"
futures-util = "0.3.28"

# TODO: make optional

# Support for parsing typescript/javascript
swc_common = {  version = "0.33.12", features = ["tty-emitter"]}
swc_ecma_parser = {  version = "0.141.33", features = ["typescript"]}
swc_ecma_ast = {  version = "0.110.15"}

# Support for parsing python
rustpython-parser = "0.3.0"

chidori-prompt-format = { path = "../chidori-prompt-format" }
chidori-static-analysis = { path = "../chidori-static-analysis" }

ts-rs = "7.1"


# TODO: make optional
yaml-front-matter = "0.1.0"
deno_core = "0.238.0"
#starlark = { version = "0.9.0"}
http-body-util = "0.1.0-rc.2"
zip = "0.6.6"
qdrant-client = "1.3.0"
hnsw_rs_thousand_birds = "0.1.20"
openai-api-rs = "2.1.4"

rustpython = { git = "https://github.com/RustPython/RustPython.git" }
rustpython-vm = { git = "https://github.com/RustPython/RustPython.git" }

base64 = "0.21.2"
num = "0.4.1"


once_cell = "1"
neon-serde3 = "0.10.0"
target-lexicon = "0.12.13"
dirs = "5.0.1"

[dependencies.neon]
version = "0.10.1"
default-features = false
features = ["napi-6", "channel-api", "promise-api", "try-catch-api"]

[build-dependencies]
tonic-build = "0.9.2"
target-lexicon = "0.12"
dirs = "3.0"