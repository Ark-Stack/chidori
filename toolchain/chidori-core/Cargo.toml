[package]
name = "chidori-core"
version.workspace = true
authors.workspace = true
edition.workspace = true
license.workspace = true
homepage.workspace = true
repository.workspace = true
description = "Core of Chidori, compiles graph and node definitions into an interpretable graph"


# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html
[lib]
name = "chidori_core"
crate-type = ["cdylib", "lib"]
bench = false
proc-macro = true
path = "src/lib.rs"

[[bin]]
name = "chidori-core"
path = "src/main.rs"

[dependencies]
anyhow.workspace = true
indoc.workspace = true
serde.workspace = true
serde_derive.workspace = true
# Rust compiler is not able to identify across crates that workspace dependencies are identical (bug?)
serde_json = "=1.0.128"
uuid.workspace = true
tonic.workspace = true
prost.workspace = true
tokio.workspace = true
env_logger.workspace = true
log.workspace = true
futures.workspace = true
rkyv.workspace = true
reqwest.workspace = true
bytes.workspace = true
petgraph.workspace = true
thiserror.workspace = true

fancy-regex = "0.13.0"
tokio-cron-scheduler = "0.10.0"
regex = "1.10.3"
ariadne = "0.3.0"
chumsky = "0.9.3"
im = "15.1.0"
num_cpus = "1"
typescript-type-def = "0.5.7"
serde_yaml = "0.9.25"
handlebars = "4.3.7"
syn = "1.0"
quote = "1.0"
crossbeam-utils = "0.8.15"
priority-queue = "1.3.2"
rand = "0.8"
async-trait = "0.1.69"
dotenv = "0.15.0"
futures-util = "0.3.28"
typed-arena = "2.0.1"
insta.workspace = true
sha1 = "0.10.5"


# Support for parsing python
rustpython-parser = "0.3.0"

chidori-prompt-format = { path = "../chidori-prompt-format", version = "0.1.36" }
chidori-static-analysis = { path = "../chidori-static-analysis", version = "0.1.3" }

indexmap = "2.2.6"
dashmap = "5.5.3"
clap = { version = "4.5.13", features = ["derive"] }

# TODO: make optional
yaml-front-matter = "0.1.0"
#deno = "1.46.3"
thousand_birds_deno = "1.46.3"
#deno_runtime = "0.177.0"
deno_core = "=0.307.0"
#starlark = { version = "0.9.0"}
http-body-util = "0.1.0-rc.2"
qdrant-client = "1.3.0"
hnsw_rs_thousand_birds = "0.1.20"
openai-api-rs = "5.0.4"


#rustpython = { git = "https://github.com/RustPython/RustPython.git" }
#rustpython-vm = { git = "https://github.com/RustPython/RustPython.git" }
pyo3 = { version = "0.20.3", features = ["abi3-py37"]}
pyo3-asyncio = { version = "0.20.0", features = ["attributes", "tokio-runtime"] }
pyo3-log = { version = "0.9.0"}

fantoccini = "0.19.3"

base64 = "0.21.2"
num = "0.4.1"

once_cell = "1"
target-lexicon = "0.12.13"
dirs = "5.0.1"

tracing = { version ="0.1", features = ["log", "attributes"]  }
tracing-subscriber = {  version= "0.3.18", features = ["env-filter"] }
tracing-chrome = "0.7.1"
opentelemetry = "0.22.0"
opentelemetry_sdk = {  version ="0.22" , features = ["rt-tokio", "rt-tokio-current-thread"]}
opentelemetry-otlp = "0.15.0"
tracing-bunyan-formatter = "0.3.3"
tracing-opentelemetry = "0.23.0"
opentelemetry-semantic-conventions = "0.14.0"
no_deadlocks = "1.3.2"
# ollama-rs = { version = "0.1.0", features = ["stream"] }
rusqlite.workspace = true
which = "4.4.2"

[build-dependencies]
target-lexicon = "0.12"
dirs = "3.0"
pyo3-build-config = "0.22.5"
anyhow = "1.0.82"



#[package.metadata.pyo3]
#python = "/opt/homebrew/bin/python3.12"

[target.x86_64-apple-darwin]
rustflags = [
    "-C", "link-arg=-undefined",
    "-C", "link-arg=dynamic_lookup",
]

[target.aarch64-apple-darwin]
rustflags = [
    "-C", "link-arg=-undefined",
    "-C", "link-arg=dynamic_lookup",
]